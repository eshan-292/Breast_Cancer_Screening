This repository contains code for object detection and training using the DETR (DEtection TRansformer) model and YOLO (You Only Look Once) model.

Install dependencies:

pip install -r requirements.txt

----------------------------------

File Structure:
-> requirements.txt - Contains the dependencies required for the project-> train.py - Script to train the models
-> train.py - Script to train the models
    Contains two functions: transfomer() which contains code for training the transformer model and yolo() which contains code for training the YOLO model.
-> test.py - Script to test the models
    Accepts the inputs of mode (yolo/transformer), image folder, trained model, and output folder. Upon execution, the script runs the model on all images in the input folder, saving predictions in text files in the output directory.
-> visualize_heatmaps.py - Script to visualize the heatmaps generated by the models
    Accepts the inputs of mode(yolo/transformer) ,image folder, trained model, and output folder. Upon execution, the script runs the model on all images in the input folder, saving GradCAM(for yolo)/Attention Maps(for transformer) visualizations in the output directory.
-> model.pt - Saved yolo model
-> detr_model - Saved detr model (download from the drive link in the Report - https://drive.google.com/drive/folders/1o1JS_3H4WNb3tIBXSGurSuZAKGL6ujJz?usp=sharing)
-> yolo_cam - Contains code necessary for GradCAM visualizations for YOLO model
-> yolo_data.yaml - Contains the data configuration for the YOLO model. Needs to be updated with the path to train and val data if training the yolo model
-> Report.pdf - Contains the report for the project
-> experiments - Contains the code for the experiments conducted in the project
    Contains rcnn.py, which contains code for training the Faster R-CNN model

----------------------------------

#Running Instructions:

-> Running test.py-
Run the following command:
python test.py <mode> <image_folder> <model_path> <output_folder>

mode: yolo/transformer
image folder: Path to the folder containing images to be tested
model_path: Path to the trained model
output folder: Path to the folder where the output files will be saved


Sample commands:
python3.10 test.py yolo '/Users/eshan/Main/OneDrive - IIT Delhi 2/Eshan/IITD/Sem-8/COL780-Computer Vision/COL780_A4/data_repo/sample_test/test/images' model.pt output 
python3.10 test.py transformer '/Users/eshan/Main/OneDrive - IIT Delhi 2/Eshan/IITD/Sem-8/COL780-Computer Vision/COL780_A4/data_repo/sample_test/test/images' detr_model output 



-> Running visualise_heatmaps.py:

Run the following command:
python visualise_heatmaps.py <mode> <image_folder> <model_path> <output_folder>

mode: yolo/transformer
image folder: Path to the folder containing images to be tested
model_path: Path to the trained model
output folder: Path to the folder where the output files will be saved

Sample commands:
python3.10 visualise_heatmaps.py yolo '/Users/eshan/Main/OneDrive - IIT Delhi 2/Eshan/IITD/Sem-8/COL780-Computer Vision/COL780_A4/data_repo/sample_test/test/images' model.pt output
python3.10 visualise_heatmaps.py transformer '/Users/eshan/Main/OneDrive - IIT Delhi 2/Eshan/IITD/Sem-8/COL780-Computer Vision/COL780_A4/data_repo/sample_test/test/images' detr_model output


